# pull official python alpine image
FROM python:3.9

# Set Environment Variable
ENV PYTHONUNBUFFERED 1
ENV C_FORCE_ROOT true

# Making source and static directory
RUN mkdir /container-backend
RUN mkdir /container-backend/static

# Creating Work Directory
WORKDIR /container-backend

# Adding mandatory packages to docker


# Update pip

# Installing requirements.pip from project
COPY ./requirements.pip /scripts/
RUN pip install --upgrade pip && pip install cryptography
RUN pip install --no-cache-dir -r /scripts/requirements.pip



RUN apt install curl
RUN curl -s https://ftp.nluug.nl/pub/graphics/blender/release/Blender3.0/blender-3.0.0-linux-x64.tar.xz --output blender.tar.xz && tar -xf blender.tar.xz && mv blender-3.0.0-linux-x64 /blender
# removing temporary packages from docker and removing cache 
RUN apt-get update && \
    apt-get install -y \
    curl \
    bzip2 \
    libfreetype6 \
    libgl1-mesa-dev \
    libglu1-mesa \
    libxi6 \
    libxrender1 && \
    apt-get -y autoremove && \
    rm -rf /var/lib/apt/lists/*

COPY ./wait-for-it.sh /wait-for-it.sh
COPY ./container-backend/ /container-backend/
COPY ./get_frames.py /get_frames.py
ENV PATH=/blender:/usr/bin/:$PATH
# CMD will run when this dockerfile is running
CMD ["sh", "-c", "/wait-for-it.sh postgres-container-manager:5432 -- /container-backend/start.sh; celery -A core worker -l INFO"]
